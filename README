Hello World 1.0
===============

This project is intended to be a bare-bones example of how to use the Autotools to package & build a C++ program.  See the comments in configure.ac, Makefile.am and src/Makefile.am for more information.

How to use
==========

To actually build this thing, try the following:

autoreconf -fi
./configure
make

The first step is only required for "maintainers".  Anyone building from a release tarball would have a working configure script, and be able to go straight to step 2; however I personally prefer not to commit things to revision control if they can be quickly and easily autogenerated.

You should then be able to run the resulting executable without installation (though installation is certainly an option):

./src/hellow

Next steps
==========

Now that you have a working example, you will no doubt wish to take it further.
First, a few words of advice:

* Always look to see if autoconf already has a macro for the test you want
  to perform before rolling your own.
* Document your custom "--with-<X>" and "--enable-<X>" options using
  AS_HELP_STRING.
* Check for your dependencies!  A well-behaved package should fail at the
  configure stage if it cannot be built in the current environment.
* Further to the above, if you have optional dependencies, ALWAYS expose them
  via "--with-<X>" arguments.  Do not automatically enable/disable program
  features at configure time based on dependency checks; if someone asks for
  a feature explicitly, or it is enabled by default, then fail if dependencies
  are not met.
* If you are having trouble detecting presence of a commonly-used platform
  feature or third-party library, check the autoconf macro archive before
  rolling your own test.
* Learn the difference between user variables, shadow variables (AM_<X>) and
  per-target variables.  Do not clobber user variables in your automake files.

Links:

http://www.gnu.org/software/autoconf/manual/
http://www.gnu.org/software/automake/manual/
https://www.gnu.org/software/autoconf-archive/
